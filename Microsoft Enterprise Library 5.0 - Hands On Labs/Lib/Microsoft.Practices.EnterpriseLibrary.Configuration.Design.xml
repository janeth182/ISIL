<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Configuration.Design</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1">
            <summary>
            Resolve a <typeparamref name="T"/> from the underlying container.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1" -->
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1.Resolve">
            <summary>
            Resolves an instance of <typeparamref name="T"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver`1.Resolve(System.Type)">
            <summary>
            Returns an instance of <paramref name="childType"/> whose ancestor
            must be of type <typeparamref name="T"/>.
            </summary>
            <param name="childType"></param>
            <returns>An instance of <see cref="!:T"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Creates an instance of the the GenericResolver class.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.Resolve">
            <summary>
            Returns a <typeparamref name="T"/> from the underlying container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ContainerUtility.GenericResolver`1.Resolve(System.Type)">
            <summary>
            Returns an instance of <paramref name="childType"/> whose ancestor
            must be of type <typeparamref name="T"/>.
            </summary>
            <param name="childType"></param>
            <returns>An instance of <see cref="!:T"/></returns>
            <exception cref="T:System.InvalidCastException">If the <paramref name="childType"/> cannot be cast to <typeparamref name="T"/></exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor">
            <summary>
            Interaction logic for CustomAttributesEditor.xaml
            </summary>
            <summary>
            CustomAttributesEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.CustomAttributesEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor">
            <summary>
            Interaction logic for ElementCollectionEditor.xaml
            </summary>
            <summary>
            ElementCollectionEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.ElementCollectionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor">
            <summary>
            Provides a user interface for selecting a file name.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.FileNameEditor"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that can be used to gain additional context information.
            </param>
            <param name="provider">
            A service provider object through which editing services may be obtained.
            </param>
            <param name="value">
            An instance of the value being edited.
            </param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FilteredFileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the open file dialog when it is created.
            </summary>
            <param name="openFileDialog">
            The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to use to select a file name. 
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor">
            <summary>
            Interaction logic for FlagsEditor.xaml
            </summary>
            <summary>
            FlagsEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.FlagsEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl">
            <summary>
            Visual control that allows a user to select the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> which is used to store an cryptographic key.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseDataProtectionScopeControl.Scope">
            <summary>
            Gets or sets the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> which should be used to encrypt a key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl">
            <summary>
            Visual control that allows a user to select the file which is used to store an cryptographic key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IWizardValidationTarget">
            <summary>
            Represents the validation logic for a control within the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IWizardValidationTarget.ValidateControl">
            <summary>
            Validates the control
            </summary>
            <returns><see langword="true"/> if controls state is valid; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl"/>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ChooseKeyFileControl.Filepath">
            <summary>
            Gets or sets the filepath which is used to store the cryptographic key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl">
            <summary>
            Visual control that allows a user to specify a key for an cryptography algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl"/> class.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.KeyCreator">
            <summary>
            Sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate a new random key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.Key">
            <summary>
            <para>Gets or sets the key for the algorithm.</para>
            </summary>
            <value>
            <para>The key for the algorithm</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CreateNewKeyControl.KeyLength">
            <summary>
            <para>Gets the length of the current key.</para>
            </summary>
            <value>
            <para>The length of the current key.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard">
            <summary>
            UI wizard that allows a user to manipulate a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class, from within the configuration console.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/>.
            </summary>
            <param name="keyCreator">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate an input key.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> and 
            for a specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep"/>.
            </summary>
            <param name="keyCreator">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate an input key.</param>
            <param name="step">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep"/> which should be shown within the wizard.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.KeySettings">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> for this wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.Key">
            <summary>
            Sets an unencrypted key to be used within the wizard.    
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard.KeyCreator">
            <summary>
            Sets an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> instance, that should be used to validate and generate keys.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep">
            <summary>
            Enumeration to represent the steps within the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizard"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.SupplyKey">
            <summary>
            Wizard step in which the user decides how to provide a key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.CreateNewKey">
            <summary>
            Wizard step in which the user specifies a new cryptographic key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ChooseKeyFile">
            <summary>
            Wizard step in which the user specifies a file, the cryptoghrapic key should be stored in.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ChooseProtectionScope">
            <summary>
            Wizard step in which the user specifies the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> 
            which should be used to protect the key file.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.OpenExistingKeyFile">
            <summary>
            Wizard step in which the user chooses a existing keyfile that should be used as key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.ImportArchivedKey">
            <summary>
            Wizard step in which the user imports an archived keyfile as key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.CryptographicKeyWizardStep.Finished">
            <summary>
            Wizard step that indicates the wizard is completed.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl">
            <summary>
            Visual control that allows a user to export an protected key to an archived key file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.ValidateControl">
            <summary>
            Validates the fields on this form
            </summary>
            <returns>True if all fields on form are valid.</returns>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.Filename">
            <summary>
            Gets or sets the file path to which the key should be exported.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyControl.Password">
            <summary>
            Gets the password which should be used to export the key.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI">
            <summary>
            UI to support exporting a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.#ctor(Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ExportKeyUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty">
            <summary>
            Represents a configuration node that contains cryptographic key information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty.KeySettings">
            <summary>
            Gets the cryptographic key information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ICryptographicKeyProperty.KeyCreator">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator"/> that should be used to generate and validate the cryptographic key information.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator">
            <summary>
            <para>Represents the creator of keys for security algorithms.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.GenerateKey">
            <summary>
            <para>When implemented by a class, generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>When implemented by a class, determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.IKeyCreator.KeyLength">
            <summary>
            <para>When implemented by a class, gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl">
            <summary>
            Visual control that allows a user to import an protected key from an archived key file, from within the cryptographic key wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.Filename">
            <summary>
            Gets the file path to archived key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ImportArchivedKeyControl.Passphrase">
            <summary>
            Gets the password that should be used reading information from the archived key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator"/> class.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.HashAlgorithm"/> type that should be used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyedHashAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor">
            <summary>
            Provides a user interface for managing cryptogrpahic key information.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that can be used to gain additional context information.
            </param>
            <param name="provider">
            A service provider object through which editing services may be obtained.
            </param>
            <param name="value">
            An instance of the value being edited.
            </param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.
            </summary>
            <param name="context">See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</param>
            <returns>See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseDpapiScopeMessage">
             <summary>
               Looks up a localized string similar to The key for this algorithm is stored in a file. To further protect the key, it is encrypted using the Data Protection API (DPAPI).
            
            Please select the data protection mode. “User” mode will encrypt your data using the credentials of the currently logged-in user. “Machine” mode will allow any user on this computer to encrypt or decrypt the key..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseExistingKeyFileMessage">
            <summary>
              Looks up a localized string similar to Please choose the location of the existing DPAPI-encrypted algorithm key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ChooseKeyFileMessage">
            <summary>
              Looks up a localized string similar to The key for this algorithm will be encrypted and stored in a file. Please choose where you would like to store this file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CreateKeyMessage">
            <summary>
              Looks up a localized string similar to Please enter or generate the key you would like to use for this algorithm (in hexadecimal):.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CreateNewKeyLabel">
            <summary>
              Looks up a localized string similar to Create a new key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardCancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardFinishButton">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardNextButton">
            <summary>
              Looks up a localized string similar to Next  &gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardPreviousButton">
            <summary>
              Looks up a localized string similar to &lt;  Previous.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptographicKeyWizardTitle">
            <summary>
              Looks up a localized string similar to Cryptographic Key Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.CryptoKeyWizardErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DataProtectionScopeCurrentUser">
            <summary>
              Looks up a localized string similar to User mode.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DataProtectionScopeLocalMachine">
            <summary>
              Looks up a localized string similar to Machine mode.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.DecryptPasswordCheckFailure">
            <summary>
              Looks up a localized string similar to Password is not correct..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ErrorExportingKey">
            <summary>
              Looks up a localized string similar to An error occurred exporting the key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ErrorImportingKey">
            <summary>
              Looks up a localized string similar to An error occurred importing the key. Please make sure the filepath and ProtectionScope are corrent..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExistingKeyLabel">
            <summary>
              Looks up a localized string similar to Use an existing DPAPI-protected key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDialogTitle">
            <summary>
              Looks up a localized string similar to Export Key As.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportDirectoryInvalid">
            <summary>
              Looks up a localized string similar to Directory is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyCommandText">
            <summary>
              Looks up a localized string similar to Export key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyDialogTitle">
            <summary>
              Looks up a localized string similar to Export Key Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyFileMessage">
            <summary>
              Looks up a localized string similar to The key for this algorithm will be encrypted with a password and stored in a file. Please choose where you would like to store this file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyLongCommandText">
            <summary>
              Looks up a localized string similar to Export cryptography key to archive..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyPasswordConfirmLabel">
            <summary>
              Looks up a localized string similar to Confirm password:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyPasswordLabel">
            <summary>
              Looks up a localized string similar to Please enter the password with which to encrypt this key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyUICancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportKeyUIOkButton">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportPasswordMinLength">
            <summary>
              Looks up a localized string similar to Password must be at least {0} characters..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportPasswordsDoNotMatch">
            <summary>
              Looks up a localized string similar to Passwords do not match..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportSuccessful">
            <summary>
              Looks up a localized string similar to Key has been exported successfully..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ExportSuccessfulTitle">
            <summary>
              Looks up a localized string similar to Export.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.FileDoesNotExists">
            <summary>
              Looks up a localized string similar to Could not find the specified file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.FileShouldNotBeEmpty">
            <summary>
              Looks up a localized string similar to The filename should not be empty.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.GenerateKeyButtonText">
            <summary>
              Looks up a localized string similar to &amp;Generate.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.GenericCreateStatusText">
            <summary>
              Looks up a localized string similar to Create a new {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportArchivedKeyMessage">
            <summary>
              Looks up a localized string similar to Please choose the location of the existing password-encrypted algorithm key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportArchivedKeyPasswordLabel">
            <summary>
              Looks up a localized string similar to Please enter the password that was used to encrypt this key file:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDecryptError">
            <summary>
              Looks up a localized string similar to Unable to decrypt key.  Password may be incorrect..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDecryptFormatError">
            <summary>
              Looks up a localized string similar to Unable to read key file. File format may be invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportDialogTitle">
            <summary>
              Looks up a localized string similar to Open key archive.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportKeyLabel">
            <summary>
              Looks up a localized string similar to Import a password-protected key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportPasswordInvalid">
            <summary>
              Looks up a localized string similar to Password is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportPasswordInvalidTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSourceFileInvalid">
            <summary>
              Looks up a localized string similar to File does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSuccessful">
            <summary>
              Looks up a localized string similar to Key has been imported successfully..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ImportSuccessfulTitle">
            <summary>
              Looks up a localized string similar to Import.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidExportDestination">
            <summary>
              Looks up a localized string similar to Invalid export destination..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidImportSource">
            <summary>
              Looks up a localized string similar to Invalid source file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.InvalidKeyWhenSavingError">
            <summary>
              Looks up a localized string similar to Key is not set and node is invalid. Please delete this node and recreate it with a valid key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyArchiveFileFilter">
            <summary>
              Looks up a localized string similar to Key export files (*.txt)|*.txt|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyCouldNotBeRead">
            <summary>
              Looks up a localized string similar to Could not read key from archive. Password might be incorrect..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyedHashProviderNodeName">
            <summary>
              Looks up a localized string similar to Keyed Hash Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileBadNameError">
            <summary>
              Looks up a localized string similar to {0} is not a valid key file name. Please re-enter..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileFilter">
            <summary>
              Looks up a localized string similar to Key files (*.key)|*.key|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyFileLoadingError">
            <summary>
              Looks up a localized string similar to Unable to load cryptographic configuration -- Cannot open key file {0}. Configuration will be removed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerEditorRequiresKeyInfoProperty">
            <summary>
              Looks up a localized string similar to Invalid property type.  You may only use the KeyManagerEditor on properties of the type KeyInfo..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUICurrentKeySizeCaption">
            <summary>
              Looks up a localized string similar to Key Size:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKey">
            <summary>
              Looks up a localized string similar to Invalid key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKeyCharactersErrorMessage">
            <summary>
              Looks up a localized string similar to Key must be in hexadecimal form (for example, 49FFC7).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIInvalidKeyLengthErrorMessage">
            <summary>
              Looks up a localized string similar to Invalid key length.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyManagerUIKeyBoxEncrypted">
            <summary>
              Looks up a localized string similar to The key is hidden for security purposes.  If you would like a new key you must create a new cryptography instance.  If you must replace the key for this instance, delete this instance and create a new instance with the same name..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.KeyShouldNotBeEmpty">
            <summary>
              Looks up a localized string similar to Please enter a key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.MissingPassword">
            <summary>
              Looks up a localized string similar to Key file is password protected and no password was provided..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileFailureErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to open Key because the key file, {0}, cannot be found. If your configuration has not been saved, save it now. If it has been saved and the key file still cannot be found, you can either put the correct key file in that location, or you can delete and recreate this node with a new key file. Exception message is: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileFailureTitle">
            <summary>
              Looks up a localized string similar to Unable to open key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OpenExistingKeyFileTitle">
            <summary>
              Looks up a localized string similar to Open existing key file.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OverwriteExportFileCaption">
            <summary>
              Looks up a localized string similar to Export Key.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.OverwriteExportFileMessage">
            <summary>
              Looks up a localized string similar to The file {0} is read-only.  Would you like to overwrite the file?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ProtectedKeySettingsToString">
            <summary>
              Looks up a localized string similar to &lt;hidden&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.ProtectionScopeDescription">
            <summary>
              Looks up a localized string similar to The DataProtectionScope that should be used..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.SaveExistingKeyFileTitle">
            <summary>
              Looks up a localized string similar to Choose keyfile.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.SupplyKeyMessage">
            <summary>
              Looks up a localized string similar to In order to use this algorithm, you must supply a key. You can either create a new key, or use an existing key..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.TypeShouldDeriveFromHashAlgorithm">
            <summary>
              Looks up a localized string similar to Type should derive from System.Security.Cryptography.HashAlgorithm..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.KeyManagerResources.TypeShouldDeriveFromSymmetricAlgorithm">
            <summary>
              Looks up a localized string similar to Type should derive from System.Security.Cryptography.SymmetricAlgorithm..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl">
            <summary>
            Visual control that allows a user to select an existing key file within the cryptographic key wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.OpenExistingKeyFileControl.Filepath">
            <summary>
            The file path to the existing key file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings">
            <summary>
            <para>Represents the settings to store and open a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.#ctor(System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings"/> class, given a <paramref name="filename"/> and <see cref="T:System.Security.Cryptography.DataProtectionScope"/>.
            </summary>
            <param name="filename">The file path to the protected keyfile.</param>
            <param name="scope">The <see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the keyfile.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ToString">
            <summary>
            Returns a string representation of this class.
            </summary>
            <returns>A string representation of this class.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.Filename">
            <summary>
            Gets or sets the file path to the protected keyfile.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.Scope">
            <summary>
            Gets or sets the <see cref="T:System.Security.Cryptography.DataProtectionScope"/> used to protect the keyfile.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey">
            <summary>
            Gets or sets the actual <see cref="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.ProtectedKeySettings.ProtectedKey"/> represented by this class.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl">
            <summary>
            Visual control that allows a user to select an to select a method of proving a key.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyControl.Method">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod"/> which should be used inside the cryptographic key wizard.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod">
            <summary>
            Enumeration to represent the ways a user can provide a cryptographic key.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.CreateNew">
            <summary>
            A new key should be created.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.OpenExisting">
            <summary>
            An existing protected key file should be used.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SupplyKeyMethod.ImportKey">
            <summary>
            An archived keyfile should be used.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator"/> class.
            </summary>
            <param name="algorithmType">The <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/> type that should be used.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Design.SymmetricAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.FieldsNode">
            <summary>
              Looks up a localized string similar to Fields.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.MethodsNode">
            <summary>
              Looks up a localized string similar to Methods.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.MemberChooser.MemberChooserResources.PropertiesNode">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser">
            <summary>
            Allows for multiple member selection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser.#ctor(System.Windows.Forms.Design.IUIService)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser"/> class.
            </summary>
            <param name="uiService">The <see cref="T:System.Windows.Forms.Design.IUIService"/> to perform UI operations.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooser.ChooseMembers(System.Type)">
            <summary>
            Launches a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI"/> to perform the selection of multiple members.
            </summary>
            <param name="type">The type for which the members are to be selected.</param>
            <returns>A colleciton with the selected members.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI">
            <summary>
            User interface for selecting multiple members from a type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.#ctor(System.Type,System.Windows.Forms.Design.IUIService)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI"/> class.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which the members are to be chosen from.</param>
            <param name="uiService">The <see cref="T:System.Windows.Forms.Design.IUIService"/> to provide UI services.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.GetSelectedMembers">
            <summary>
            Returns the selected members.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.Design.TypeMemberChooserUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog">
            <summary>
            Interaction logic for SelectGacAssembliesDialog.xaml
            </summary>
            <summary>
            SelectGacAssembliesDialog
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.SelectGacAssembliesDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser">
            <summary>
            Interaction logic for TypeBrowser.xaml
            </summary>
            <summary>
            TypeBrowser
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserControl">
            <summary>
            Interaction logic for TypeBrowserControl.xaml
            </summary>
            <summary>
            TypeBrowserControl
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBrowserControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Validate">
            <summary>
             Validates the property and updates the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ValidationErrors"/> collection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)">
            <summary>
             Provides an opportunity to initialize the property after creation and prior to visualization.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Attributes">
            <summary>
            Gets the attributes that where supplied to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.DisplayName">
            <summary>
            The name of this property as it should appear in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Description">
            <summary>
            The description for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.PropertyType">
            <summary>
            The type of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Type">
            <summary>
            The type of the value.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Hidden">
            <summary>
            Returns <see langword="true"/> if the property should show up in the editor.
            Otherwise returns <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Converter">
            <summary>
            Converter that should be used to convert value to and from a string representation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.EditorBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.HasChildProperties">
            <summary/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ChildProperties">
            <summary/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.HasSuggestedValues">
            <summary>
            returns <see langword="true"/> if there are suggested values for this property. 
            otherwise <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.SuggestedValues">
            <summary>
            returns a list of suggested values.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ReadOnly">
            <summary>
            returns <see langword="true"/> if the property is readonly.
            otherwise <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.IsValid">
            <summary>
             Returns true if valid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.ValidationErrors">
            <summary>
             The validation errors for this property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/> for this editor.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectionEditor.GetBaseTypeAttribute(System.ComponentModel.ITypeDescriptorContext)">
            <devdoc>
            Get the base type of the object to use to filter possible types.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.AssembliesLabelText">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.AssemblyLoadFailedErrorMessage">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.EnumTypesFailedErrorMessage">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.ErrorBuildingType">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.ExceptionCannotSetClosedGenerics">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.ExceptionTypeBuildTypeExceptionMakingGeneric">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.ExceptionTypeBuildTypeNotSet">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.NoTypesFoundInAssemblyCaption">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.NoTypesFoundInAssemblyErrorMessage">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeNotGenericTypeParameter">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeParameterUndefined">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeSelectorClassRootNodeText">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeSelectorClassRootNodeTextWithConfigurationType">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeSelectorInterfaceRootNodeText">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypePicker.Resources.TypeSelectorInterfaceRootNodeTextWithConfigurationType">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI">
            <summary>
            Provides a dialog box for editing identity
            role rule expressions.
            </summary>
            <summary>
            Provides a dialog box for editing identity
            role rule expressions.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both 
            managed and unmanaged resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionEditorFormUI.Expression">
            <summary>
            Gets or sets the expression that 
            is currently being edited.
            </summary>
            <value>An expression</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox">
            <summary>
            Represents a customized <see cref="T:System.Windows.Forms.RichTextBox"/> 
            control that adds syntax highlighting for
            identity role rule expressions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Adds syntax highlighting to the current text.
            </summary>
            <param name="e">The arguments for the event.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.InitParser">
            <devDoc>
            Initialzes Parser to improve first time text input performance.
            </devDoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.ParseStatus">
            <summary>
            Gets the current parse status message.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.ExpressionIsValid">
            <summary>
            Gets whether or not the expression is valid.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.SelectionUnderlineStyle">
            <summary> 
            Gets or sets the underline style to apply to the current selection or insertion point. 
            </summary> 
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle"/> that represents the underline style to 
            apply to the current text selection or to text entered after the insertion point.</value> 
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.ExpressionTextBox.SelectionUnderlineColor">
            <summary> 
            Gets or sets the underline color to apply to the current selection or insertion point. 
            </summary> 
            <value>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor"/> that represents the underline color to 
            apply to the current text selection or to text entered after the insertion point.</value> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.CHARFORMAT2">
            <summary> 
            Contains information about character formatting in a rich edit control. 
            </summary> 
            <remarks><see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.CHARFORMAT2"/> requires Rich Edit 2.0.</remarks> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.PARAFORMAT2">
            <summary> 
            Contains information about paragraph formatting in a rich edit control. 
            </summary> 
            <remarks><see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.NativeMethods.PARAFORMAT2"/> requires Rich Edit 2.0.</remarks> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.AccessDenied">
            <summary>
              Looks up a localized string similar to Not Authorized.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.AccessGranted">
            <summary>
              Looks up a localized string similar to Authorized.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseFailedCaption">
            <summary>
              Looks up a localized string similar to Expression is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseFailedMessage">
            <summary>
              Looks up a localized string similar to Expression is invalid. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseSucceededMessageBox">
            <summary>
              Looks up a localized string similar to Expression is valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.ParseSucceededMessageBoxCaption">
            <summary>
              Looks up a localized string similar to Expression is valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.RuleNameRequired">
            <summary>
              Looks up a localized string similar to You must specify a name for this Rule..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.UnableToParseDialogCaption">
            <summary>
              Looks up a localized string similar to Unable to parse expression.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.RuleEditor.Resources.UnableToParseDialogMessage">
            <summary>
              Looks up a localized string similar to Unable to parse expression.  Are you sure you want to exit?.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor">
            <summary> 
            Specifies the color of underline for a segment of rich text. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.None">
            <summary> 
            No specific underline color specified. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Black">
            <summary> 
            Black. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Blue">
            <summary> 
            Blue. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Cyan">
            <summary> 
            Cyan. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.LimeGreen">
            <summary> 
            LimeGreen. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Magenta">
            <summary> 
            Magenta. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Red">
            <summary> 
            Red. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Yellow">
            <summary> 
            Yellow. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.White">
            <summary> 
            White. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkBlue">
            <summary> 
            DarkBlue. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkCyan">
            <summary> 
            DarkCyan. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Green">
            <summary> 
            Green. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkMagenta">
            <summary> 
            DarkMagenta. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Brown">
            <summary> 
            Brown. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.OliveGreen">
            <summary> 
            OliveGreen. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.DarkGray">
            <summary> 
            DarkGray. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineColor.Gray">
            <summary> 
            Gray. 
            </summary> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle">
            <summary> 
            Specifies the underline styles for a segment of rich text. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.None">
            <summary> 
            No underlining. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Normal">
            <summary> 
            Single-line solid underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Word">
            <summary> 
            Single-line underline broken between words. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Double">
            <summary> 
            Double-line underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Dotted">
            <summary> 
            'Dotted' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Dash">
            <summary> 
            'Dash' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DashDot">
            <summary> 
            'Dash-dot' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DashDotDot">
            <summary> 
            'Dash-dot-dot' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Wave">
            <summary> 
            Single-line wave style underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Thick">
            <summary> 
            Single-line solid underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.Hairline">
            <summary> 
            Single-line solid underline with less thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.DoubleWave">
            <summary> 
            Double-line wave style underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.HeavyWave">
            <summary> 
            Single-line wave style underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.LongDash">
            <summary> 
            'Long Dash' pattern underline. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDash">
            <summary> 
            'Dash' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDashDot">
            <summary> 
            'Dash-dot' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDashDotDot">
            <summary> 
            'Dash-dot-dot' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickDotted">
            <summary> 
            'Dotted' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.UnderlineStyle.ThickLongDash">
            <summary> 
            'Long Dash' pattern underline with extra thickness. 
            </summary> 
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor">
            <summary>
            Editor for formatter templates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.
            </summary>
            <param name="context">See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</param>
            <returns>See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI">
            <summary>
            Represents an editor for a template.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.#ctor">
            <summary>
            Initializes the components.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.Design.Formatters.TemplateEditorUI.UserText">
            <summary>
            The text of the template as defined by the user at designtime.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.LoadAssemblyFromCacheDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.LoadAssemblyFromCacheDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.LoadAssemblyFromCacheDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException">
            <summary>
            Represents an error while building a type from a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException"/> class with the given message.
            </summary>
            <param name="message">The message describing the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException"/> class with the given message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message describing the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or 
            <see langword="null"/> if no inner exception is specified. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException"/> class with the given message and a 
            reference to the inner exception that is the cause of this exception and the node where the error was 
            detected.
            </summary>
            <param name="message">The message describing the error.</param>
            <param name="failingNode">The node where the type build failure was detected.</param>
            <param name="innerException">The exception that is the cause of the current exception, or 
            <see langword="null"/> if no inner exception is specified. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException"/> class with serialized data.
            </summary>
            <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
            exception being thrown. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException.FailingNode">
            <summary>
            The node where the error was detected.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode">
            <summary>
            Represents a type in the data structure used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI"/> to specify types.
            </summary>
            <remarks>
            A node holds a <see cref="T:System.Type"/>, and if the type is an open generic type the node will have children 
            representing the generic type parameters.
            <para/>
            A node can be asked to create the type it represents. Doing so might throw exceptions if the represented type
            is not valid (e.g. if the types assigned to the child nodes of a node representing a generic type do not satisfy 
            the parameter constraints); the node doesn't attempt to validate whether the specified type can be built, 
            letting the .NET framework perform the necessary validations.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/> with a type constraint.
            </summary>
            <param name="constraint">The constraint for the node.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/> representing a generic parameter node.
            </summary>
            <param name="genericTypeParameter">The type representing the generic type parameter.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.CreateTreeForType(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint)">
            <summary>
            Creates a tree of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/> instances that represents the <paramref name="nodeType"/> type.
            </summary>
            <param name="nodeType">The <see cref="T:System.Type"/> to represent.</param>
            <param name="typeConstraint">The type constraint that the limits what types can be specified
            for the root of the tree.</param>
            <returns>A tree of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/> representing <paramref name="nodeType"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.BuildType">
            <summary>
            Creates the type representing by the receiving node and its children.
            </summary>
            <returns>The represented type.</returns>
            <exception cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildException">when there is an error building the type (e.g. if the 
            types assigned to the child nodes of a node representing a generic type do not satisfy the parameter
            constraints)</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.SetNodeType(System.Type)">
            <summary>
            Sets the <see cref="T:System.Type"/> the node represents, and updates its children to represent generic type 
            parameters when an open generic type is involved.
            </summary>
            <param name="nodeType">The new type the node represents.</param>
            <returns><see langword="true"/> if the update caused the child nodes to change; otherwise 
            <see langword="false"/></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.ParameterType">
            <summary>
            Gets the generic type parameter associated to the node, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.Constraint">
            <summary>
            Gets the constraint that should be used to filter the available types this node can hold.
            </summary>
            <remarks>
            This constraint is less detailed than the constraints that can be specified for a generic type parameter,
            so satisfying this constraint does not guarantee that the type can be built.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.NodeType">
            <summary>
            Gets the type currently set for this node.
            </summary>
            <remarks>
            This is not the same as <see cref="T:System.Type"/> represented by the node, which involves the current node and its
            children, should there be any.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.GenericParameterNodes">
            <summary>
            Gets the children of a node.
            </summary>
            <remarks>
            Child nodes represent generic type parameters.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode.Description">
            <summary>
            Gets a description of the current node.
            </summary>
            <remarks>
            The description of a node includes whether its type has been set and whether it represents a generic
            type parameter.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint">
            <summary>
            Represents a constraint on a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint"/> class.
            </summary>
            <param name="baseType">The base type (class or interface) from which the constrained type should derive.</param>
            <param name="configurationType">The base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/>
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </param>
            <param name="typeSelectorIncludes">Additional constraints.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.Matches(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.BaseType">
            <summary>
            Gets the base type (class or interface) from which the constrained type should derive.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.ConfigurationType">
            <summary>
            Gets the base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/> 
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeBuildNodeConstraint.TypeSelectorIncludes">
            <summary>
            Gets the additional constraints.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector">
            <summary>
            Represents a selector for types
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.#ctor(System.Type,System.Type,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector"/> class with the current type, the base type
            and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector"/> class with the current type, the base type
            a flag for what types to include, and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="flags">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes"/> values.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes,System.Type,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector"/> class with the current type, the base type
            a flag for what types to include, a configuration type and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="flags">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes"/> values.</param>
            <param name="configurationType">The configurtion type.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.IsTypeValid(System.Type)">
            <summary>
            Determines if a type is valid.
            </summary>
            <param name="selectedType">The selected type.</param>
            <returns>true if the type is valid; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.LoadTreeView(System.Reflection.Assembly)">
            <summary>
            Loads the tree based on an assembly.
            </summary>
            <param name="assembly">The assembly to use to load the tree.</param>
            <returns>true if the tree contains the assembly; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.LoadFilteredTreeView(System.Reflection.Assembly)">
            <summary>
            Loads the tree based on an assembly, filtering the types based on the last known filter.
            </summary>
            <param name="assembly">The assembly to use to load the tree.</param>
            <returns>true if the tree contains the assembly; otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.AssembliesRootNode">
            <summary>
            The root node of the tree.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.TypeToVerify">
            <summary>
            The type to verify.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelector.TreeNodeTable">
            <devdoc>
            Represents the table of tree nodes by assembly type.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor">
            <summary>
            Provides a user interface for seleting a <see cref="T:System.Type"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor"/> is a <see cref="T:System.Drawing.Design.UITypeEditor"/> that provides a dialog box for selecting a <see cref="T:System.Type"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by <seealso cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/>.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
            </param>
            <param name="provider">
            An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.
            </param>
            <param name="value">
            The object to edit.
            </param>
            <returns>
            The fully qualifed type name for the chosen type.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/> for this editor.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorEditor.GetBaseType(System.ComponentModel.ITypeDescriptorContext)">
            <devdoc>
            Get the base type of the object to use to filter possible types.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI">
            <summary>
            <para>Represents the UI for the assembly selector dialog.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.#ctor(System.Type,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
            <param name="flags">
            <para>The flags for the editor.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypeSelectorIncludes,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
            <param name="flags">
            <para>The flags for the editor.</para>
            </param>
            <param name="configurationType">The base configuration type the selected type must reference.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by this <see cref="T:System.Windows.Forms.Form"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.CollapseAssemlbyNodes">
            <summary>
            Collapses all assemlby treeview nodes in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.SelectedType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> selected for use.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> selected for use.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ComponentModel.Editors.TypeSelectorUI.TypeImageList">
            <summary>
            <para>Gets the <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton">
            <summary>
            Sites and opens the <see cref="T:System.Windows.Controls.ContextMenu"/> on a button when it is clicked.  This
            enables showing the context menu on left-click gestures.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ContextMenuButton.OnClick">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> routed event. 
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.ElementModelContainer">
            <summary>
            Contains a see <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> providing hookup for keyboard acceleration
            and default layout/visualization.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator">
            <summary>
            Associates a <see cref="T:System.Windows.Input.KeyGesture"/> to control the expansion or contraction of one <see cref="T:System.Windows.Controls.Grid"/> column.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty">
            <summary>
            The target column number to control with the specified input gesture.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetTargetColumn(System.Windows.Controls.Grid)">
            <summary>
            Returns the target column number to expand or contract in response to <see cref="T:System.Windows.Input.KeyGesture"/>
            </summary>
            <param name="grid">The grid containing the column.</param>
            <returns>The the column number</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetTargetColumn(System.Windows.Controls.Grid,System.Int32)">
            <summary>
            Sets the target column number to expand or contravct in reponse to <see cref="T:System.Windows.Input.KeyGesture"/>
            </summary>
            <param name="grid">The grid containing the column.</param>
            <param name="columnIndex">The column number to address.</param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.DecrementKeyGestureProperty">
            <summary>
            The <see cref="T:System.Windows.Input.KeyGesture"/> used to decrement the width of the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetDecrementKeyGesture(System.Windows.Controls.Grid)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for decrementing the column width.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetDecrementKeyGesture(System.Windows.Controls.Grid,System.Windows.Input.KeyGesture)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for decrementing the column width.
            </summary>
            <param name="grid"></param>
            <param name="gesture"></param>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.IncrementKeyGestureProperty">
            <summary>
            The <see cref="T:System.Windows.Input.KeyGesture"/> used to increment the width of the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.GetIncrementKeyGesture(System.Windows.Controls.Grid)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for incrementing the column width.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.SetIncrementKeyGesture(System.Windows.Controls.Grid,System.Windows.Input.KeyGesture)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.KeyGesture"/> attached property value for incrementing the column width.
            </summary>
            <param name="grid"></param>
            <param name="gesture"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior">
            <summary>
            Behavior attached to <see cref="T:System.Windows.Controls.Grid"/> to manage handling increment and decrement responses to <see cref="!:KeyGestures"/>
            This is attached to a grid using the <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator"/> attached properties.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior.Attach(System.Windows.Controls.Grid)">
            <summary>
            Attaches to the grid to begin conitoring <see cref="E:System.Windows.UIElement.KeyDown"/> events.
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAcceleratorBehavior.MoveGrid(System.Double)">
            <summary>
            Moves the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Controls.GridSplitterKeyAccelerator.TargetColumnProperty"/> by the amount specified.
            </summary>
            <remarks>
            This will decrement as long as the value is not below <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"/>, once it is, it no longer decrements.
            </remarks>
            <param name="delta">The amount to increment (if positive) or decrement (if negative) the grid.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IEnumerable`1"/> to a string.
            </summary>
            <seealso cref="T:System.Windows.Controls.ValidationError"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the <see cref="T:System.Windows.Controls.ValidationError"/> enumerable to a string.
            </summary>
            <param name="value">The value of <see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <param name="targetType">The target type to convert to.</param>
            <param name="parameter">Any conversion parameters, not used.</param>
            <param name="culture">Culture info.</param>
            <returns>A <see cref="T:System.String"/> of the errors joined by <see cref="P:System.Environment.NewLine"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Converters.ErrorsToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions">
            <summary>
            Provides extensions for safely selecting and filtering from <see cref="T:System.Collections.Generic.IEnumerable`1"/> and
            logs those exceptions using <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterSelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Safely selects items from <see cref="T:System.Collections.Generic.IEnumerable`1"/> and runs exceptions through the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterSelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Safely selects many items from <see cref="T:System.Collections.Generic.IEnumerable`1"/> and runs exceptions through the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)"/>
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)">
            <summary>
            Filters an exception by comparing it to an internal type list.  If the exception type matches one in the list, it logs a warning.
            Exceptions not matching the list are rethrown.
            </summary>
            <param name="ex"></param>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogWarning(System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterAction(System.Action)">
            <summary>
            Wraps an action and filters any exceptions using <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.FilteredSafeExtensions.FilterException(System.Exception)"/>.
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI">
            <summary>
            Interaction logic for ConfigurationEditor.xaml
            </summary>
            <summary>
            ConfigurationEditorUI
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IUIServiceWpf">
            <summary>
            Defines Windows Presentation Foundation UI Services, similar to those found in <see cref="T:System.Windows.Forms.Design.IUIService"/>, 
            but targeted to WPF.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Console.Hosting.ConfigurationEditorUI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> extensions to skip over exceptions produced by enumerables and,
            optionally, provide an <see cref="T:System.Action"/> delegate for handling those exceptions.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.WithNoExceptions``1(System.Collections.Generic.IEnumerable{``0})" -->
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.WithNoExceptions``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Exception})">
            <summary>
            Filters out exceptions produced by <see cref="T:System.Collections.Generic.IEnumerable`1"/> and calls back to an <see cref="T:System.Action`1"/> 
            for handling errors.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during selection.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectSafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during selection and calls back to an <see cref="T:System.Action`1"/>
            when an error is encountered.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during SelectMany.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Extensions.SafeEnumerableExtensions.SelectManySafe``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Action{System.Exception})">
            <summary>
            Filters out exceptions occurring from <paramref name="selector"/> during SelectMany.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="exceptionAction"></param>
            <returns></returns>
            <seealso cref="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter">
             <summary>
             A static log writer for the configuration tool that, currently relies underlying <see cref="T:System.Diagnostics.Trace"/>
             mechanisms for publishing.
             </summary>
             <remarks>
             Logging is off by default and may be turned in the configuration file by configuration a trace switch 
             named configurationToolLogging.
             
             <example>
             <![CDATA[
             <system.diagnostics>
               <switches>
                 <add name="configurationToolLogging" value="Warning"/>
               </switches>
             </system.diagnostics>
            ]]>
             </example>
             </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LoggingSwitch">
            <summary>
            The <see cref="T:System.Diagnostics.TraceSwitch"/> for the configuration tool.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogException(System.Exception)">
            <summary>
            Logs an exception using <see cref="M:System.Exception.ToString"/>
            with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogException(System.String,System.Exception)">
            <summary>
            Logs an exception by combining a message and exception
            with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogError(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Error"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogWarning(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Warning"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationLogWriter.LogInfo(System.String)">
            <summary>
            Logs a message with level of <see cref="F:System.Diagnostics.TraceLevel.Info"/>
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddCachingBlockCommandDefaultCacheManagerName">
            <summary>
              Looks up a localized string similar to Cache Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddConfigurationSourcesCommandDefaultSelectedSourceName">
            <summary>
              Looks up a localized string similar to System Configuration Source.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AddDatabaseBlockCommandDefaultConnectionStringName">
            <summary>
              Looks up a localized string similar to Connection String.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AdmGenerationDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AdmTemplateDialogFilter">
            <summary>
              Looks up a localized string similar to ADM Files(*.adm)|*.adm.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AllAssembliesGroup">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationNewConfiguration">
            <summary>
              Looks up a localized string similar to New Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationTitleFormat">
            <summary>
              Looks up a localized string similar to Enterprise Library Configuration - {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssembliesFilter">
            <summary>
              Looks up a localized string similar to Assemblies (*.dll;*.exe)|*.dll;*.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssemblyLoadFailedErrorMessage">
            <summary>
              Looks up a localized string similar to Error loading assembly: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CommandConfigurationSourceElementDeleteOnWrongType">
            <summary>
              Looks up a localized string similar to The ConfigurationSourceElementDeleteCommand may only be used on elements that are ConfigurationSourceElement configuration type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DefaultDeleteElementTitleFormat">
            <summary>
              Looks up a localized string similar to Delete {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicateExceptionTypeMessage">
            <summary>
              Looks up a localized string similar to The selected type &apos;{0}&apos; already exists in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicateValidationTypeMessage">
            <summary>
              Looks up a localized string similar to The selected type &apos;{0}&apos; already exists in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicationExceptionTypeTitle">
            <summary>
              Looks up a localized string similar to Add exception type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DuplicationValidationTypeTitle">
            <summary>
              Looks up a localized string similar to Add validation type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EnumEditorExceptionInvalidPropertyType">
            <summary>
              Looks up a localized string similar to Enum editor can only be used with enumerable properties..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EnvironmentDeltaFileFilter">
            <summary>
              Looks up a localized string similar to Delta Configuration files (*.dconfig)|*.dconfig|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorCouldNotLoadSection">
            <summary>
              Looks up a localized string similar to Error Loading Section {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorGeneratingAdmFile">
            <summary>
              Looks up a localized string similar to An error occurred creating the ADM template. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorGenericTypeParameterNotSet">
            <summary>
              Looks up a localized string similar to Type argument not set for parameter {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingAssembly">
            <summary>
              Looks up a localized string similar to Error loading assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingConfigSourceFile">
             <summary>
               Looks up a localized string similar to An error occurred loading the configuration source:
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorLoadingTypes">
            <summary>
              Looks up a localized string similar to Error loading types.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorNoSelectedType">
            <summary>
              Looks up a localized string similar to No type has been selected..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorResolvingType">
            <summary>
              Looks up a localized string similar to There was an error resolving the type: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorResolvingTypeCaption">
            <summary>
              Looks up a localized string similar to Error resolving type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSectionsOnMainFile">
            <summary>
              Looks up a localized string similar to The application could not save the configuration information to the configuration file. Please try to save the configuration to a different file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSectionsOnSelectedSource">
            <summary>
              Looks up a localized string similar to The application could not save the configuration information to the selected configuration source. Please check the settings for the selected configuration source or select a different one in the Configuration Sources section..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorSavingConfigurationSourceOnMainFile">
            <summary>
              Looks up a localized string similar to The application could not save the configuration sources section to the configuration file. Please try to save the configuration to a different file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionCannotInvokeContextMenuButton">
            <summary>
              Looks up a localized string similar to Cannot invoke as button is not enabled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionCollectionElementEditorNeedsTemplateAttribute">
            <summary>
              Looks up a localized string similar to Property {0} has a CollectionElementEditor specified, but is missing the required CollectionEditorTemplateAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionReferenceScopeNotSet">
            <summary>
              Looks up a localized string similar to Reference attribute for type {0} has no scope specified..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionStringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenerateAdmTemplateCommandText">
            <summary>
              Looks up a localized string similar to Generate ADM Template.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenericTypeParameter">
            <summary>
              Looks up a localized string similar to Generic type parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InvalidKeyValueError">
            <summary>
              Looks up a localized string similar to The key entered is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.LoadTypesErrorMessage">
            <summary>
              Looks up a localized string similar to Error loading types:{0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MessageBoxErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NewCollectionElementNameFormat">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration files (*.config)|*.config|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenConfigurationFileDialogTitle">
            <summary>
              Looks up a localized string similar to Open Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptContinueOperationDiscardChangesWarningMessage">
            <summary>
              Looks up a localized string similar to Continuing will discard changes made to the current configuration. Do you want save the existing configuration first?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptContinueOperationDiscardChangesWarningTitle">
            <summary>
              Looks up a localized string similar to Enterprise Library Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptOverwriteReadonlyFileMessage">
            <summary>
              Looks up a localized string similar to File is Read Only. Would you like to Overwrite the file?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptOverwriteReadonlyFiletitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptSaveOverFileThatCannotBeReadFromWarningMessage">
            <summary>
              Looks up a localized string similar to The application cannot read the file &apos;{0}&apos;. It may contain errors or invalid content. If you continue, you will overwrite this file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PromptSaveOverFileThatCannotBeReadFromWarningTitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ReferencePropertyInvalidType">
            <summary>
              Looks up a localized string similar to ElementReferenceProperty may only be created for properties of type string.  Check the property on which the ReferenceAttribute is applied..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ReferencePropertyNoReference">
            <summary>
              Looks up a localized string similar to &lt;none&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationBeforeExportingAdmRequest">
            <summary>
              Looks up a localized string similar to The application configuration has not been saved. Would you like to save the configuration before exporting?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationCaption">
            <summary>
              Looks up a localized string similar to Save Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration files (*.config)|*.config|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationFileDialogTitle">
            <summary>
              Looks up a localized string similar to Save Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveConfigurationInvalidError">
            <summary>
              Looks up a localized string similar to The configuration has validation errors that must be corrected before it can be saved..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationDirectoryDoesNotExist">
            <summary>
              Looks up a localized string similar to The path {0} cannot be located..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationElementReferenceMissing">
            <summary>
              Looks up a localized string similar to Referenced item is not available.  Select an existing item or add a new item..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationElementReferenceMissingWithScope">
            <summary>
              Looks up a localized string similar to Referenced item is not available.  Select an existing item or add a new item to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorDuplicateKeyValue">
            <summary>
              Looks up a localized string similar to Duplicate key value..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorExceptionMessage">
            <summary>
              Looks up a localized string similar to An error ocurred during validation: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorToString">
            <summary>
              Looks up a localized string similar to The property {0} is invalid for {1}. Message: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationFileNotWritable">
            <summary>
              Looks up a localized string similar to The file {0} is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationFilePathNotFound">
            <summary>
              Looks up a localized string similar to Could not locate the file or part of the path for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationLoggingPriorityValuesInvalid">
            <summary>
              Looks up a localized string similar to The maximum priority must be higher than the minimum priority..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationPathNotVerified">
            <summary>
              Looks up a localized string similar to The file {0} cannot be verified..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationRequiredPropertyValueMissing">
            <summary>
              Looks up a localized string similar to The field {0} is missing a required value..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationTypeNotLocatable">
            <summary>
              Looks up a localized string similar to Unable to find type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningAssemblyLoadNonFatal">
            <summary>
              Looks up a localized string similar to The configuration editor was unable to load an assembly. This may affect the configuration tasks you can perform.  The error encountered was: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningToTextConverterError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WarningToTextConverterWarning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the given <paramref name="instance"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="value">Value to validate</param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator">
            <summary>
             Validates a file path for existence.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.ValidateCore(System.Object,System.String,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/>.
            </summary>
            <param name="instance">
            The instance to validate, this is expected to be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property"/>
            </param>
            <param name="value"></param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidator.ContextPath">
            <summary>
            Returns the path which should be used to validate relative paths.
            </summary>
            <value>The path from the current configuration file.</value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator.#ctor">
            <summary>
             Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FilePathValidator"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredFieldValidator">
            <summary>
             Validates that a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Value"/> has a required value.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError">
            <summary>
            Collects information relevant to a warning or error returned by validation.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> calss with the invalid object, property name, and error message.
            </summary>
            <param name="property">
            The invalid property.
            </param>
            <param name="errorMessage">
            The message that describes the error.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property,System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> calss with the invalid object, property name, and error message.
            </summary>
            <param name="property">
            The invalid property.
            </param>
            <param name="errorMessage">
            The message that describes the error.
            </param>
            <param name="isWarning">Sets the error as a warning instead of an error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.ToString">
            <summary>
            Returns the string representatio of the error.
            </summary>
            <returns>
            The string representatio of the error
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.PropertyName">
            <summary>
            Gets the property name of the failed validation.
            </summary>
            <value>
            The property name of the failed validation.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.Message">
            <summary>
            Gets or sets the message for the error.
            </summary>
            <value>
            The message for the error.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.IsWarning">
            <summary>
            Returns true if the validation error is a warning.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.ElementPath">
            <summary>
             The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> reference of the containing element producing the valiation error.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultCollectionElementAddCommand">
            <summary>
            Adds a <see cref="T:System.Configuration.ConfigurationElement"/> type to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel">
            <summary>
            Represents a bindable command that can be executed from within the designer.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute)">
            <summary>
            Initializes an instance of CommandModel from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>.
            </summary>
            <param name="commandAttribute"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.#ctor">
            <summary>
            Initializes an instance of CommandModel.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.OnCanExecuteChanged">
            <summary>
             Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecuteChanged"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.OnPropertyChanged(System.String)">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.PropertyChanged"/> event for this class
            </summary>
            <param name="propertyName">The name of the property changing</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Browsable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.HelpText">
            <summary>
             The command's related help text.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.ChildCommands">
            <summary>
             Child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands to this command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.AddInstrumentationBlockCommand">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Configuration.InstrumentationConfigurationSection"/> section to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <remarks>
            This attribute is applied using the typename specified in <see cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommonDesignTime.CommandTypeNames.AddInstrumentationApplicationBlockCommand"/> 
            on the Enterprise Library Common assembly.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand">
            <summary>
            Command Model implementation that will add a new block to the designer.<br/>
            This Command Model can be added by annotating an assembly with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute"/> attribute.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute)">
            <summary>
            Intializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand"/> class.
            </summary>
            <remarks>
            TODO: This class is intended to be intialized by the XXXX 
            </remarks>
            <param name="configurationModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/> instance that represents the configuration source that is currently edited.</param>
            <param name="commandAttribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddApplicationBlockCommandAttribute"/> that specifes metadata for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand"/> to be initialized with.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.CreateConfigurationSection">
            <summary>
            When overriden in a derived class, returns the intial configuration schema that should be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.Execute(System.Object)">
            <summary>
            Creates and adds a new section to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
            <param name="parameter"></param>
            <remarks>
            After the section has been created <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.CreateConfigurationSection"/>, the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> 
            may be modified during the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AfterSectionAdded"/> template method.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AfterSectionAdded">
            <summary>
            Provides the opportunity to modify the section immediately after it's been added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.SectionName">
            <summary>
            Gets the name of the section that should be added to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.AddedSection">
            <summary>
            The section added during <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddApplicationBlockCommand.Execute(System.Object)"/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand">
            <summary>
            Delete command for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceElement"/> items that ensure
            the last element in the collection cannot be deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand"/> class.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this command applies to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.DefaultDeleteCommandModelInitialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Initializes this command.  This is generally used by the dependency injection contianer.
            </summary>
            <param name="applicationModel"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.Execute(System.Object)">
            <summary>
            Executes the command to delete the element if <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.CanExecute(System.Object)"/> is true.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationSourceElementDeleteCommand.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.CategoryOverrides">
            <summary>
              Looks up a localized string similar to Overrides.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.DeltaDialogFilter">
            <summary>
              Looks up a localized string similar to Environment Delta Configuration Files (*.dconfig)|*.dconfig|All files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedConfigurationTitle">
            <summary>
              Looks up a localized string similar to Export Merged Environment Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedEnvironmentTitle">
            <summary>
              Looks up a localized string similar to Export Merged Environment Configuration File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.ExportMergedUnsavedMainConfigurationMessage">
            <summary>
              Looks up a localized string similar to The main configuration must be saved before you can save the merged environment configuration. Do you want to save the main configuration now?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OpenDeltaDialogTitle">
            <summary>
              Looks up a localized string similar to Open Environment Delta File (dconfig).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OpenDeltaNoMergeSectionFound">
            <summary>
              Looks up a localized string similar to The specified file does not contain a valid EnvrionmentMergeSection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesDeltaFileDisplayName">
            <summary>
              Looks up a localized string similar to Environment Delta File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyDontOverrideProperties">
            <summary>
              Looks up a localized string similar to Don&apos;t Override Properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyNameTemplate">
            <summary>
              Looks up a localized string similar to Overrides on {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.OverridesPropertyOverrideProperties">
            <summary>
              Looks up a localized string similar to Override Properties.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveDeltaDialogTitle">
            <summary>
              Looks up a localized string similar to Save Environment Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveDeltaUnsavedMainConfigurationMessage">
            <summary>
              Looks up a localized string similar to The main configuration must be saved before you can save the environment delta configuration. Do you want to save the main configuration now?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverrides.DesignResources.SaveEnvironmentDeltaCommandTitle">
            <summary>
              Looks up a localized string similar to Save Environment Delta File.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OverridesProperty">
            <summary>
            property that declares the thing that represents overrides for 1 element.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementAssociation">
            <summary>
            Denotes an associated with another element.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementAssociation.AssociatedElement">
            <summary>
            When implemented, returns the associated <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.IElementAssociation.ElementName">
            <summary>
            When implemented, returns an element name that may differ from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Name"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)">
            <summary>
            Initialization for this element during the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.Load(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)"/> or <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel.AddSection(System.String,System.Configuration.ConfigurationSection)"/>.
            </summary>
            <param name="context">The load context for this call</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ElementViewModelServiceDependencies(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Injection Method used to supply additional dependencies to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            </summary>
            <param name="elementLookup"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Validate">
            <summary>
             Validates the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/> of this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetLocalPathPart">
            <summary>
            Gets a string that can be appended to the parent's <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> to compose a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllProperties">
            <summary>
            Gets all the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> intstances that are part of this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            Returns an un evaluated iterator class. <br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)">
            <summary>
            Gets the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> with the specified <paramref name="propertyName"/>. <br/>
            If the property cannot be found, returns <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllChildElements">
            <summary>
            Gets all the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> intstances that are directly contained in this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <returns>
            An un evaluated iterator class. <br/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.Boolean})">
            <summary>
            Gets all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> that match the supplied <paramref name="filter"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentElements">
            <summary>
            Returns all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DescendentConfigurationsOfType``1">
            <summary>
            Returns all descending <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances relative to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>
            whose <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType"/> is assignable to <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>An empty set or a set <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> items.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.AncesterElements">
            <summary>
            Gets all ancester <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.GetAllCommands">
            <summary>
            Creates or collections all the commands related to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Delete">
            <summary>
             Deletes this element.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationType">
            <summary>
            Gets the type of the configuration element this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> was created for. <br/>
            </summary>
            <remarks>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s ConfigurationType is often used to identify or attach behavior to <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ConfigurationElement">
            <summary>
            Gets the configuration element instance this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>  was created for.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DeclaringProperty">
            <summary>
            Gets the property on the containing configuration element, this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>  was created for.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Attributes">
            <summary>
            Gets the attributes that where supplied to this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.PromoteCommands">
            <summary>
            Gets a boolean that indicates whether this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s add commands should be promoted to its parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>.
            </summary>
            <value>
            <see langword="true"/> if this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>'s add commands should be promoted to its parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. Otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Name">
            <summary>
            Gets the name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for use in the UI (User Interface).<br/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path">
            <summary>
            Gets a string that can be used to uniquely identify this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>. <br/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.TypePath">
            <summary>
            Gets the type path information for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> in the
            form ParentTypePath/ConfigurationElementType.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties">
            <summary>
            Gets all <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Property(System.String)"/> instances for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ChildElements">
            <summary>
            Gets all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instances contained as direct child elements.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ParentElement">
            <summary>
            Gets the parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/> that contains this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.AddCommands">
            <summary>
             Returns the sub-set of add <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.CustomCommands">
            <summary>
             Returns the subset of custom <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands from <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands"/>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Commands">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command associated with this configuraiton element.
            </summary>
            <remarks>
             Default command are typically provided by the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection"/>.  These may be overridden
             for each configuration element through the use of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>
             </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.DeleteCommand">
            <summary>
             The delete <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/>.
            </summary>
             <remarks>
             This command is provided by the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.ContainingSection"/> during construction, but
             may be overriden through the use of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>.
             </remarks>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Deleted">
            <summary>
            Raised when this element is deleted.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand">
            <summary>
            Collects a type from the user and populates the newly created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> with type information.
            This will attempt to set the Name property and TypeName properties found in the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Properties"/> collection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypePickingCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/> type and
            containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>.  If no property to set is explicitly defined, it will default to the
            TypeName property, following the pattern for setting <see cref="T:System.Type"/> information for many <see cref="T:System.Configuration.ConfigurationElement"/>s in Enterprise Library.
            </summary>
            <param name="configurationElementType">The configuration element type.  This is expected to be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/></param>
            <param name="elementCollectionModel">The containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.TypePickingCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypePickingCollectionElementAddCommand"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/> type and
            containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/>.  If no property to set is explicitly defined, it will default to the
            TypeName property, following the pattern for setting <see cref="T:System.Type"/> information for many <see cref="T:System.Configuration.ConfigurationElement"/>s in Enterprise Library.
            </summary>
            <param name="configurationElementType">The configuration element type.  This is expected to be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement"/></param>
            <param name="elementCollectionModel">The containing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ManageableConfigurationSourceViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty">
            <summary>
            A custom property added to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> to support properties that reference items in other ElementViewModels.
            </summary>
            <remarks>
            The element reference property relies on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/>s registered with <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup"/> to create
            and monitor <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/>s.  This allows the property to provide a default value if the reference is not yet available
            and provide monitoring for name changes in the referened item.
            
            ElementReferenceProperty provides <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.SuggestedValues"/> and <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.HasSuggestedValues"/> to support
            drop-down lists for selecting values.
            
            If the referenced item is available, the properties of that referenced item can be found through <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ChildProperties"/>.
            
            Reference properties are automatically created by the use of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.ReferenceAttribute"/> on the <see cref="T:System.Configuration.ConfigurationElement"/>.
            
            Note:  The declaring property must have a <see cref="T:System.String"/> property type
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty">
            <summary>
             A property model from a property discovered on a <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
             Initializes an instance of ElementProperty.
            </summary>
            <param name="serviceProvider">Service provider used to locate certain services for the configuration system.</param>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> owning the property.</param>
            <param name="declaringProperty">The description of the property.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
             Initializes an instance of ElementProperty.
            </summary>
            <param name="serviceProvider">Service provider used to locate certain services for the configuration system.</param>
            <param name="parent">The parent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> owning the property.</param>
            <param name="declaringProperty">The description of the property.</param>
            <param name="additionalAttributes">Additional attributes made available to the ElementProperty.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.ConfigurationName">
            <summary>
            The name of the configuration element or attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.IsRequired">
            <summary>
             Returns true if the property is required.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementProperty.DeclaringElement">
            <summary>
             The element that contains the property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel,System.ComponentModel.PropertyDescriptor)">
            <summary>
             Initializes an instance of the ElementReferenceProperty.  This is usually created by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel"/>.
            </summary>
            <param name="serviceProvider">The service provide used within the Enterprise Library configuraiton system.</param>
            <param name="lookup">The element lookup registry.</param>
            <param name="parent">The ElementViewModel on which this property is attached.</param>
            <param name="declaringProperty">The descriptor declaring this property.</param>
            <exception cref="T:System.ArgumentException">Thrown if the declaring property <see cref="P:System.ComponentModel.PropertyDescriptor.PropertyType"/> is not a <see cref="T:System.String"/> type.</exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReferenceProperty.ReferencedElement">
            <summary>
             The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> referenced.  This will return null if the reference has not
             yet been realized, such as the case if the property has been loaded but the reference has not
             yet been loaded,
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.ClassCommandModel">
            <summary>
            Represents a bindable-command constructed from an attributed class that saves
            the attributed class type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.ClassCommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute,System.Type)">
            <summary>
            Instantiates a new instance of this class.
            </summary>
            <param name="attribute">The attribute defining the command.</param>
            <param name="attributedClassType">The type attributed with <paramref name="attribute"/>.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.ClassCommandModel.AttributedClassType">
            <summary>
            The class type that was attributed to construct this command
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand">
            <summary>
            Initiates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>, usually from a user action.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.WizardCommandAttribute,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IUIServiceWpf,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel})">
            <summary>
            Initializes a new instance of the WizardCommand.
            </summary>
            <param name="attribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.WizardCommandAttribute"/> used to define this command.</param>
            <param name="attributedClassType">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> class type to be created and invoked on command execution.</param>
            <param name="uiService">The service to use when displaying dialogs.</param>
            <param name="resolver">The service to use to get instances of new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> based on <paramref name="attributedClassType"/></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Not used.  May be null.</param>
            <remarks>
            Execution of wizard command creates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand"/> and attaches it
            to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream">
            <summary>
            Class that tracks the current input state of the parser.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo">
            <summary>
            Class containing information about a type name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.Name">
            <summary>
            The base name of the class
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.Namespace">
            <summary>
            Namespace if any
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.TypeNameInfo.AssemblyName">
            <summary>
            Assembly name, if any
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult">
            <summary>
            Object containing the result of attempting to match a PEG rule.
            This object is the return type for all parsing methods.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.Matched">
            <summary>
            Did the rule match?
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.MatchedString">
            <summary>
            The characters that were matched (if any)
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult.ResultData">
            <summary>
            Any extra information provided by the parsing expression
            (only set if the parse matched). The nature
            of the data varies depending on the parsing expression.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult">
            <summary>
            Helper methods to make it easier to pull the data
            out of the result of a sequence expression.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
                            </param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
                                -or-
                            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
                                -or-
                                The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
                                -or-
                                Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Remove(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.
                            </param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SequenceResult.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
                            </exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
                            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder">
            <summary>
            A simple implementing of the rules for a Parsing Expression Grammar
            parsing algorithm. This supplies basic methods to do the primitives
            of the PEG, and combinators to create larger rules.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Any(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream)">
            <summary>
            The PEG "dot" operator that matches and consumes one character.
            </summary>
            <param name="input">Input to the parser.</param>
            <returns>The parse result.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Match(System.Char)">
            <summary>
            Parse function generator that returns a method to match a single,
            specific character.
            </summary>
            <param name="charToMatch">Character to match.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Match(System.Func{System.Char,System.Boolean})">
            <summary>
            Parse function generator that checks if the current character matches
            the predicate supplied.
            </summary>
            <param name="predicate">Predicate used to determine if the character is in
            the given range.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.ZeroOrMore(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            The "*" operator - match zero or more of the inner parse expressions.
            </summary>
            <param name="inner">Parse method to repeat matching.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Sequence(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult}[])">
            <summary>
            Parsing combinator that matches all of the given expressions in
            order, or matches none of them.
            </summary>
            <param name="expressions">Expressions that form the sequence to match.</param>
            <returns>The combined sequence.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.FirstOf(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult}[])">
            <summary>
            Parsing combinator that implements the PEG prioritized choice operator. Basically,
            try each of the expressions in order, and match if any of them match, stopping on the
            first match.
            </summary>
            <param name="expressions">Expressions that form the set of alternatives.</param>
            <returns>The combined parsing method.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.Not(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Parsing combinator implementing the "not" predicate. This wraps
            the given <paramref name="expression"/> parsing method with a check
            to see if it matched. If it matched, then the Not fails, and vice
            versa. The result consumes no input.
            </summary>
            <param name="expression">The parse method to wrap.</param>
            <returns>The generated parsing function.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.EOF(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream)">
            <summary>
            Parsing expression that matches End of input.
            </summary>
            <param name="input">Parser input.</param>
            <returns>Parse result</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.WithAction(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult},System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Combinator that executes an action if the given expression matched.
            </summary>
            <param name="expression">Parsing expression to match.</param>
            <param name="onMatched">Action to execute if <paramref name="expression"/>
            matched. Input is the matched text from <paramref name="expression"/>.</param>
            <returns>The result of <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseBuilder.WithAction(System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InputStream,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult},System.Func{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult})">
            <summary>
            Combinator that executes an action if the given expression matched.
            </summary>
            <param name="expression">parsing expression to match.</param>
            <param name="onMatched">Method to execute if a match happens. This method returns
            the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ParseResult"/> that will be returned from the combined expression.</param>
            <returns>The result of <paramref name="onMatched"/> if expression matched, else
            whatever <paramref name="expression"/> returned.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Encapsulates the logic to retrieve the attributes for registered manageability providers from assembly dll files.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.AssemblyLocator)">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever"/> class that
            will retrieve attributes from the assemblies located in the running application's base directory.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.LoadRegisteredManageabilityProviders(System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute},System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute})">
            <devdoc>
            Loads the assemblies specified by the assembly names and retrieves the manageability provider attributes from them.
            The attributes are stored for later use.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.LoadAttributes``1(System.Reflection.Assembly,System.Collections.Generic.ICollection{``0})">
            <devdoc>
            Retrieves the attributes of type <typeparamref name="T"/> from the given assembly.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.SectionManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ConfigurationManageabilityProviderAttributeRetriever.ElementManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.EnvironmentalOverridesViewModel">
            <summary>
            View model for 1 environment
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.ExportAdmTemplateCommand.Execute(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OverridenTraceListenerCollectionEditor">
            <summary>
            Interaction logic for OverridenTraceListenerCollectionEditor.xaml
            </summary>
            <summary>
            OverridenTraceListenerCollectionEditor
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.OverridenTraceListenerCollectionEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.BlockSpecifics.TraceListenerReferenceViewModel.NameProperty">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSateliteProviderCommand">
            <summary>
            Command Model implementation that will add a provider to the designer and ensures that its block dependency is available.<br/>
            This Command Model can be used by annotating a providers configuration element with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute"/> attribute.<br/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSateliteProviderCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.MenuCommandService,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationElementType,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
            Intializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSateliteProviderCommand"/> class.
            </summary>
            <remarks>
            This class is intended to be intialized by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.SectionViewModel.CreateElementCollectionAddCommands(System.Collections.Generic.IEnumerable{System.Attribute},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)"/>.
            </remarks>
            <param name="commandAttribute">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.AddSateliteProviderCommandAttribute"/> that specifes metadata for this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.AddSateliteProviderCommand"/> to be initialized with.</param>
            <param name="collection"></param>
            <param name="commandService"></param>
            <param name="configurationElementType"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel">
            <summary>
            Default Delete Command implementation. <br/>
            Invokes the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Delete"/> method on execution.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel"/> class.
            </summary>
            <param name="elementViewModel">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance this command applies to.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.DefaultDeleteCommandModelInitialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IApplicationModel)">
            <summary>
            Intializes the command with expected items, items this depends on
            are usually provided by the dependency injection contianer.
            </summary>
            <param name="applicationModel"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultDeleteCommandModel.KeyGesture">
            <summary>
            Defines the key gesture used for this command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand">
             <summary>
             Default Command Model Implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel"/> instances.
             </summary>
             <remarks>
             This is the default add command created for any <see cref="T:System.Configuration.ConfigurationElementCollection"/>.  
             
             For homogeneous collections where only one type can ever be added, this command when invoked via <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel.Execute(System.Object)"/>, 
             will add a new instance of that type to the collection.
             
             For <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.PolymorphicConfigurationElementCollection`1"/>, this command will contain a collection
             of the child <see cref="T:System.Configuration.ConfigurationElement"/> add commands, generally one for each type that can be added.
             
             To change the commands for a configuration element, <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.CommandAttribute"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementCollectionViewModel)">
            <summary>
             Initializes an instance of DefaultElementCollectionAddCommand.  
             </summary>
            <param name="collection">The collection that will be affected by the add command.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.
                            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.Title">
            <summary>
            Provides the title of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> command.  Typically this will appear as the title to a menu in the configuration tool.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.ChildCommands">
            <summary>
             Child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.CommandModel"/> commands to this command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.DefaultElementCollectionAddCommand.Placement">
            <summary>
             The logical placement of the command.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ComponentModel.ViewModelTypeDescriptorProxy">
            <DevDoc>
             If we are not integrating back into the property editor, we might not need this at all
            </DevDoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference">
            <summary>
            Class that represents a reference to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.<br/>
            The referred element will resolve once its loaded to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel"/>. <br/>
            Once the referred element is resolved, a <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementFound"/> event is triggered. <br/>
            An instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> provides basic facilities to keep track of changes to the referred element.<br/>
            </summary>
            <remarks>
            Instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference"/> can be created by calling the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String)"/> or <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String,System.Type,System.String)"/> method.<br/>
            </remarks>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String)"/>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup.CreateReference(System.String,System.Type,System.String)"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.Element">
            <summary>
            Gets the referred <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance.
            </summary>
            <value>
            If the referred <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel"/> instance is available, returns the referred element.<br/>
            Otherwise returns <see langword="null"/>.
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementFound">
            <summary>
            Occurs when the refered element was resolved. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.ElementDeleted">
            <summary>
            Occurs when the refered element was deleted. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.NameChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Name"/> of the refered element changed. <br/>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementReference.PathChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Path"/> of the refered element changed. <br/>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext">
            <summary>
            An initialization context used for those elements and properties during explicit initialization calls <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ElementViewModel.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)"/>
            and <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Property.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.#ctor">
            <summary>
             Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext"/>
             that was not loaded from source.
             <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.WasLoadedFromSource"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource)">
            <summary>
             Initializes a enw instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext"/>
             with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/> source specified.
            </summary>
            <param name="loadSource"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.WasLoadedFromSource">
            <summary>
             Indicates if the initialize context was loaded from a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>
             or not.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.InitializeContext.LoadSource">
            <summary>
             Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Design.IDesignConfigurationSource"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep">
            <summary>
            A single step in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> sequence.
            </summary>
            <remarks>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/> is reponsible prior to execution
            for the steps validity via the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.IsValid"/> property.
            If validity changes, the step should raise the 
            <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event as 
            this is monitored by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to determine
            overall wizard validation.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep">
            <summary>
            Represents a single step in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Execute">
            <summary>
            Invoked when the wizard should apply it's changes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.IsValid">
            <summary>
            Returns true if the step is valid, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Title">
            <summary>
            Returns the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep.Instruction">
            <summary>
            Returns step instructions to display to the user.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Execute">
            <summary>
            Invoked when the wizard should apply it's changes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.OnPropertyChanged(System.String)">
            <summary>
            Invokes the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.PropertyChanged"/> event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.IsValid">
            <summary>
            Returns true if the step is valid, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Title">
            <summary>
            Returns the title of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.Instruction">
            <summary>
            Returns step instructions to display to the user.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel">
            <summary>
            Base class for a multi-step wizard.
            </summary>
            <remarks>
            The WizardModel is used in conjunction with <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> items
            to gather data from the user and apply the changes.
            
            Inheritors of WizardModel can add <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> (or an
            instance the convenience class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardStep"/>) using the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.AddStep(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep)"/>
            method.  The wizard will start with the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> oriented to
            the first <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>.
            
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView"/> provides a view over <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> and
            takes advantage of siting each step in a section of the view as well as 
            connecting to the various commands offered by the wizard (<see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand"/>, 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PrevCommand"/>, <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand"/>).
            </remarks>
            <example>
            
            public class MyWizard : WizardModel
            {
              public MyWizard(IUIServiceWpf uiService) : base(uiService)
              {
                 AddStep(new FirstStep());
                 AddStep(new SecondStep());
              }
            
              public override Title { get { return "My Wizard"; } }
            }
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.IUIServiceWpf)">
            <summary>
            Initialzies an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/>.
            </summary>
            <param name="uiService">The UI service used to display any dialogs the wizard may need.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Next">
            <summary>
            Moves to the next wizard step if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep"/> <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.IsValid"/> is true.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.IsValid">
            <summary>
            Determines if the wizard is valid.
            </summary>
            <returns>True if valid, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Execute">
            <summary>
            Executes each <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> in the wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCanExecute">
            <summary>
            Determines if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand"/> can be executed.
            </summary>
            <returns>True if it can be excuted, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PrevCanExecute">
            <summary>
            Evaluates if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PrevCommand"/> can execute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Prev">
            <summary>
            Moves to the previous <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCanExecute">
            <summary>
            Evaluates if the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand"/> can be executed.
            </summary>
            <returns>True if it can execute, false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Finish" -->
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.OnPropertyChanged(System.String)">
            <summary>
            Used to raise the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PropertyChanged"/> event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.EnsureWizardResources(System.Uri)">
            <summary>
            Ensures the wizard resources are available and merges
            them with the <see cref="T:System.Windows.Application"/> merged dictionaries.
            </summary>
            <seealso cref="T:System.Windows.ResourceDictionary"/>
            <param name="resourceUri"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Title">
            <summary>
            Title for the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.CurrentStep">
            <summary>
            The current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/> of the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.Steps">
            <summary>
            The wizard steps.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.NextCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> for executing the next command.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PrevCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> for moving to the previous <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IWizardStep"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.FinishCommand">
            <summary>
            The <see cref="T:System.Windows.Input.ICommand"/> to finish the wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.DoClose">
            <summary>
            The action invoked by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to
            close the wizard.
            </summary>
            <remarks>
            This may be used by views hosting the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel"/> to detect
            when the view should close.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.IsAvailable">
            <summary>
            Indicates the the wizard is available to load.
            </summary>
            <remarks>
            This is used by <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Commands.WizardCommand"/> to enable or disable 
            showing of the wizard</remarks>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep">
            <summary>
            Wizard step to pick the exception type and policy as part of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/> wizard.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.ConfigurationSourceModel,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Buildup.IResolver{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.Validator},Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ViewModel.Services.ElementLookup)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.PickExceptionStep"/>.
            </summary>
            <param name="serviceProvider"></param>
            <param name="sourceModel"></param>
            <param name="validatorFactory"></param>
            <param name="elementLookup"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.SelectDatabaseStep">
            <summary>
            A step in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.LogExceptionsToDatabase"/> wizard for selecting
            or entering database iformation.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.PickExceptionTypeStepExceptionTypeDisplayName">
            <summary>
              Looks up a localized string similar to Exception Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.PickExceptionTypeStepPolicyDisplayName">
            <summary>
              Looks up a localized string similar to Policy.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionNameDisplayName">
            <summary>
              Looks up a localized string similar to Connection Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionProviderNameDisplayName">
            <summary>
              Looks up a localized string similar to Provider Name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.SelectDatabaseStepConnectionStringDisplayName">
            <summary>
              Looks up a localized string similar to Connection String.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardErrorDuringExecutionTitle">
            <summary>
              Looks up a localized string similar to An Error Ocurred In The Wizard.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardLogExceptionsToDatabaseTitle">
            <summary>
              Looks up a localized string similar to Log Exception To Database.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardPickExceptionTypeInstructions">
            <summary>
              Looks up a localized string similar to Select an exception type.  Then, select enter or select an exception handling policy for the selected type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardPickExceptionTypeStepTitle">
            <summary>
              Looks up a localized string similar to Pick exception type..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardSelectDatabaseStepInstructions">
            <summary>
              Looks up a localized string similar to Enter new database connection information or select an existing database connection, if one is available..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Wizard.Resources.WizardSelectDatabaseStepTitle">
            <summary>
              Looks up a localized string similar to Select a database..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView">
            <summary>
            Interaction logic for WizardView.xaml
            </summary>
            <summary>
            WizardView
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WizardView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
